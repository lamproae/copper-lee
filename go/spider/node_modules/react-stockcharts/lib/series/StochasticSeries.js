"use strict";

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _react = require("react");

var _react2 = _interopRequireDefault(_react);

var _wrap = require("./wrap");

var _wrap2 = _interopRequireDefault(_wrap);

var _Line = require("./Line");

var _Line2 = _interopRequireDefault(_Line);

var _StraightLine = require("./StraightLine");

var _StraightLine2 = _interopRequireDefault(_StraightLine);

var StochasticSeries = (function (_React$Component) {
	_inherits(StochasticSeries, _React$Component);

	function StochasticSeries(props) {
		_classCallCheck(this, StochasticSeries);

		_get(Object.getPrototypeOf(StochasticSeries.prototype), "constructor", this).call(this, props);
		this.yAccessorForD = this.yAccessorForD.bind(this);
		this.yAccessorForK = this.yAccessorForK.bind(this);
	}

	_createClass(StochasticSeries, [{
		key: "yAccessorForD",
		value: function yAccessorForD(d) {
			var yAccessor = this.props.yAccessor;

			return yAccessor(d) && yAccessor(d).D;
		}
	}, {
		key: "yAccessorForK",
		value: function yAccessorForK(d) {
			var yAccessor = this.props.yAccessor;

			return yAccessor(d) && yAccessor(d).K;
		}
	}, {
		key: "render",
		value: function render() {
			var props = this.props;
			var className = props.className;
			var indicator = props.indicator;
			var xScale = props.xScale;
			var yScale = props.yScale;
			var xAccessor = props.xAccessor;
			var plotData = props.plotData;
			var stroke = props.stroke;
			var type = props.type;

			var options = indicator.options();

			return _react2["default"].createElement(
				"g",
				{ className: className },
				_react2["default"].createElement(_Line2["default"], {
					xScale: xScale, yScale: yScale,
					xAccessor: xAccessor, yAccessor: this.yAccessorForD,
					plotData: plotData,
					stroke: options.stroke.D, fill: "none",
					type: type }),
				_react2["default"].createElement(_Line2["default"], {
					xScale: xScale, yScale: yScale,
					xAccessor: xAccessor, yAccessor: this.yAccessorForK,
					plotData: plotData,
					stroke: options.stroke.K, fill: "none",
					type: type }),
				StochasticSeries.getHorizontalLine(props, options.overSold, stroke.top),
				StochasticSeries.getHorizontalLine(props, 50, stroke.middle),
				StochasticSeries.getHorizontalLine(props, options.overBought, stroke.bottom)
			);
		}
	}]);

	return StochasticSeries;
})(_react2["default"].Component);

StochasticSeries.getHorizontalLine = function (props, yValue, stroke) {

	/* eslint-disable react/prop-types */
	var xScale = props.xScale;
	var yScale = props.yScale;
	var xAccessor = props.xAccessor;
	var yAccessor = props.yAccessor;
	var plotData = props.plotData;
	var type = props.type;

	/* eslint-enable react/prop-types */

	return _react2["default"].createElement(_StraightLine2["default"], {
		stroke: stroke, opacity: 0.3, type: type,
		xScale: xScale, yScale: yScale,
		xAccessor: xAccessor, yAccessor: yAccessor,
		plotData: plotData,
		yValue: yValue });
};

StochasticSeries.propTypes = {
	className: _react2["default"].PropTypes.string,
	xScale: _react2["default"].PropTypes.func,
	yScale: _react2["default"].PropTypes.func,
	xAccessor: _react2["default"].PropTypes.func,
	yAccessor: _react2["default"].PropTypes.func,
	plotData: _react2["default"].PropTypes.array,
	stroke: _react2["default"].PropTypes.object,
	type: _react2["default"].PropTypes.string
};

StochasticSeries.defaultProps = {
	className: "react-stockcharts-stochastic-series",
	stroke: {
		top: "brown",
		middle: "black",
		bottom: "brown"
	}
};

exports["default"] = (0, _wrap2["default"])(StochasticSeries);
module.exports = exports["default"];