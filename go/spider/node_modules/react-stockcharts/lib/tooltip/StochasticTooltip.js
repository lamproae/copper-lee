"use strict";

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _react = require("react");

var _react2 = _interopRequireDefault(_react);

var _utilsUtils = require("../utils/utils");

var _utilsChartDataUtil = require("../utils/ChartDataUtil");

var _ToolTipText = require("./ToolTipText");

var _ToolTipText2 = _interopRequireDefault(_ToolTipText);

var _ToolTipTSpanLabel = require("./ToolTipTSpanLabel");

var _ToolTipTSpanLabel2 = _interopRequireDefault(_ToolTipTSpanLabel);

var StochasticTooltip = (function (_React$Component) {
	_inherits(StochasticTooltip, _React$Component);

	function StochasticTooltip() {
		_classCallCheck(this, StochasticTooltip);

		_get(Object.getPrototypeOf(StochasticTooltip.prototype), "constructor", this).apply(this, arguments);
	}

	_createClass(StochasticTooltip, [{
		key: "render",
		value: function render() {
			var _props = this.props;
			var onClick = _props.onClick;
			var forChart = _props.forChart;
			var forDataSeries = _props.forDataSeries;

			var chartData = (0, _utilsChartDataUtil.getChartDataForChart)(this.props, this.context);
			var overlays = chartData.config.overlays.filter(function (eachOverlay) {
				return forDataSeries === undefined ? true : forDataSeries === eachOverlay.id;
			}).filter(function (eachOverlay) {
				return eachOverlay.indicator !== undefined;
			}).filter(function (eachOverlay) {
				return eachOverlay.indicator.isStochastic && eachOverlay.indicator.isStochastic();
			});

			if (overlays.length > 1 || overlays.length === 0) {
				console.error("Could not find Exactly one DataSeries with Stochastic indicator for Chart id=" + forChart + ", either use\n\t\t\t\tsingle Stochastic indicator per chart\n\t\t\t\tor use forDataSeries property to narrow down to single Series");
			}
			var overlay = overlays[0];
			var options = overlay.indicator.options();

			var item = (0, _utilsChartDataUtil.getCurrentItemForChart)(this.props, this.context);
			var stochastic = overlay.yAccessor(item);
			var format = chartData.config.mouseCoordinates.format;

			var K = stochastic && stochastic.K && format(stochastic.K) || "n/a";
			var D = stochastic && stochastic.D && format(stochastic.D) || "n/a";

			var origin = chartData.config.origin;

			var relativeOrigin = typeof this.props.origin === "function" ? this.props.origin(this.context.width, this.context.height) : this.props.origin;
			var absoluteOrigin = [origin[0] + relativeOrigin[0], origin[1] + relativeOrigin[1]];
			var label = this.props.children || "Stochastic";

			return _react2["default"].createElement(
				"g",
				{ transform: "translate(" + absoluteOrigin[0] + ", " + absoluteOrigin[1] + ")",
					onClick: onClick },
				_react2["default"].createElement(
					_ToolTipText2["default"],
					{ x: 0, y: 0, fontFamily: this.props.fontFamily, fontSize: this.props.fontSize },
					_react2["default"].createElement(
						_ToolTipTSpanLabel2["default"],
						null,
						label + " %K("
					),
					_react2["default"].createElement(
						"tspan",
						{ fill: options.stroke.K },
						options.period + ", " + options.K
					),
					_react2["default"].createElement(
						_ToolTipTSpanLabel2["default"],
						null,
						"): "
					),
					_react2["default"].createElement(
						"tspan",
						{ fill: options.stroke.K },
						K
					),
					_react2["default"].createElement(
						_ToolTipTSpanLabel2["default"],
						null,
						" %D ("
					),
					_react2["default"].createElement(
						"tspan",
						{ fill: options.stroke.D },
						options.D
					),
					_react2["default"].createElement(
						_ToolTipTSpanLabel2["default"],
						null,
						"): "
					),
					_react2["default"].createElement(
						"tspan",
						{ fill: options.stroke.D },
						D
					)
				)
			);
		}
	}]);

	return StochasticTooltip;
})(_react2["default"].Component);

StochasticTooltip.contextTypes = {
	chartData: _react2["default"].PropTypes.array.isRequired,
	currentItems: _react2["default"].PropTypes.array.isRequired,
	width: _react2["default"].PropTypes.number.isRequired,
	height: _react2["default"].PropTypes.number.isRequired
};

StochasticTooltip.propTypes = {
	forChart: _react2["default"].PropTypes.number.isRequired,
	xDisplayFormat: _react2["default"].PropTypes.func.isRequired,
	origin: _react2["default"].PropTypes.oneOfType([_react2["default"].PropTypes.array, _react2["default"].PropTypes.func]).isRequired,
	fontFamily: _react2["default"].PropTypes.string,
	fontSize: _react2["default"].PropTypes.number,
	forDataSeries: _react2["default"].PropTypes.number,
	onClick: _react2["default"].PropTypes.func,
	children: _react2["default"].PropTypes.node.isRequired
};

StochasticTooltip.defaultProps = {
	namespace: "ReStock.StochasticTooltip",
	xDisplayFormat: _utilsUtils.displayDateFormat,
	origin: [0, 0]
};

exports["default"] = StochasticTooltip;
module.exports = exports["default"];