"use strict";

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _react = require("react");

var _react2 = _interopRequireDefault(_react);

var TypeChooser = (function (_React$Component) {
	_inherits(TypeChooser, _React$Component);

	function TypeChooser(props) {
		_classCallCheck(this, TypeChooser);

		_get(Object.getPrototypeOf(TypeChooser.prototype), "constructor", this).call(this, props);
		this.state = {
			type: this.props.type
		};
		this.handleTypeChange = this.handleTypeChange.bind(this);
	}

	_createClass(TypeChooser, [{
		key: "handleTypeChange",
		value: function handleTypeChange(e) {
			// console.log(e.target.value);
			this.setState({
				type: e.target.value
			});
		}
	}, {
		key: "render",
		value: function render() {
			return _react2["default"].createElement(
				"div",
				null,
				_react2["default"].createElement(
					"label",
					{ forHtml: "type" },
					"Type: "
				),
				_react2["default"].createElement(
					"select",
					{ name: "type", id: "type", onChange: this.handleTypeChange, value: this.state.type },
					_react2["default"].createElement(
						"option",
						{ value: "svg" },
						"svg"
					),
					_react2["default"].createElement(
						"option",
						{ value: "hybrid" },
						"canvas + svg"
					)
				),
				this.props.children(this.state.type)
			);
		}
	}]);

	return TypeChooser;
})(_react2["default"].Component);

TypeChooser.propTypes = {
	type: _react2["default"].PropTypes.oneOf(["svg", "hybrid"]),
	children: _react2["default"].PropTypes.func.isRequired
};

TypeChooser.defaultProps = {
	type: "hybrid"
};

exports["default"] = TypeChooser;
module.exports = exports["default"];